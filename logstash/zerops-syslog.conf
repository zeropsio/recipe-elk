input {
  udp {
    port => 1514
    type => syslog
    tags => zerops
  }
  tcp {
    port => 1514
    type => syslog
    tags => zerops
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "<%{NUMBER:syslog_priority}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:syslog_message}" }
    }

    syslog_pri {}

    mutate {
        split => { "syslog_hostname" => "-" }
        add_field => { "[zerops][stack][name]" => "%{[syslog_hostname][0]}" }
        add_field => { "[zerops][service][name]" => "%{[syslog_hostname][1]}" }
        add_field => { "[zerops][instance][numberHex]" => "%{[syslog_hostname][3]}" }
        add_field => { "[zerops][container][numberHex]" => "%{[syslog_hostname][2]}" }
    }

    ruby {
      code => '
        event.set("[zerops][container][number]", event.get("[zerops][container][numberHex]").to_i(16).to_s(10))
        event.set("[zerops][instance][number]", event.get("[zerops][instance][numberHex]").to_i(16).to_s(10))
     '
    }

    mutate {
      remove_field => [ "syslog_hostname" ]
      convert => {
        "[zerops][container][number]" => "integer"
        "[zerops][instance][number]" => "integer"
      }
      add_field => { "[zerops][container][address]" => "node-id-%{[zerops][container][number]}.%{[zerops][service][name]}.%{[zerops][stack][name]}.zerops" }
    }

    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss.SSSSSS", "MMM dd HH:mm:ss.SSSSSS" ]
    }
  }
}

output {
  elasticsearch {
    hosts => [ "%%ELASTICSEARCH_URL%%" ]
    user => "elastic"
    password => "%%ELASTICSEARCH_PASSWORD%%"
  }
}
