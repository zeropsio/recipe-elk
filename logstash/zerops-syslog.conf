input {
  udp {
    port => 1514
    type => syslog
    tags => zerops
  }
  tcp {
    port => 1514
    type => syslog
    tags => zerops
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "<%{NUMBER:syslog_priority}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:syslog_message}" }
      add_tag => [ "isSyslog" ]
      tag_on_failure => []
    }

    if "isSyslog" in [tags] {
      mutate {
        remove_tag => ["isSyslog"]
      }

      syslog_pri {}

      grok {
        match => { "syslog_hostname" => "node-id-%{INT:[zerops][container][number]}\.%{WORD:[zerops][service][name]}\.%{WORD:[zerops][stack][name]}\.zerops" }
        add_tag => [ "zerops_address" ]
        tag_on_failure => []
      }

      grok {
        match => { "syslog_hostname" => "%{WORD:[zerops][stack][name]}-%{WORD:[zerops][service][name]}-%{WORD:[zerops][container][numberHex]}-%{WORD:[zerops][instance][numberHex]}" }
        add_tag => [ "zerops_hostname" ]
        tag_on_failure => []
      }

      if "zerops_address" in [tags] {
        ruby {
          code => '
            event.set("[zerops][container][numberHex]", event.get("[zerops][container][number]").to_i(10).to_s(16))
         '
        }

        mutate {
          remove_field => [ "syslog_hostname" ]
          convert => {
            "[zerops][container][number]" => "integer"
          }
          add_field => { "[zerops][container][address]" => "node-id-%{[zerops][container][number]}.%{[zerops][service][name]}.%{[zerops][stack][name]}.zerops" }
          remove_tag => ["zerops_address"]
        }
      }

      if "zerops_hostname" in [tags] {
        ruby {
          code => '
            event.set("[zerops][container][number]", event.get("[zerops][container][numberHex]").to_i(16).to_s(10))
            event.set("[zerops][instance][number]", event.get("[zerops][instance][numberHex]").to_i(16).to_s(10))
         '
        }

        mutate {
          remove_field => [ "syslog_hostname" ]
          convert => {
            "[zerops][container][number]" => "integer"
            "[zerops][instance][number]" => "integer"
          }
          add_field => { "[zerops][container][address]" => "node-id-%{[zerops][container][number]}.%{[zerops][service][name]}.%{[zerops][stack][name]}.zerops" }
          remove_tag => ["zerops_hostname"]
        }
      }

      date {
        match => [ "syslog_timestamp", "MMM  d HH:mm:ss.SSSSSS", "MMM dd HH:mm:ss.SSSSSS" ]
      }
    }
  }
}

output {
  elasticsearch {
    hosts => [ "%%ELASTICSEARCH_URL%%" ]
    user => "elastic"
    password => "%%ELASTICSEARCH_PASSWORD%%"
  }
}
